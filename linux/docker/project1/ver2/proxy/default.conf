upstream grafanas{
	server grafana:3000;
}
upstream word{ # wordpress location 설정시 필요한 upstream 구문입니다.
        server wordpress:80; #wordpress 80번 컨테이너로 이동
}
upstream web{ # web 설정
        server nginx:80; #nginx 80번 컨테이너로 이동
}
upstream utils{ # flask 설정
        server flask:80; #flask 80번 컨테이너로 이동
}
# Default server configuration
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name "";
	return 444;
}

server {
	listen 443 ssl ;
	server_name "";
	ssl_certificate /etc/letsencrypt/live/[도메인]/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/[도메인]/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/[도메인]/fullchain.pem;
	#include /etc/nginx/snippets/ssl.conf;
	return 444;
}

server {
        listen 80;
        listen [::]:80 ; #기본 서버 설정
        server_name [domain].com; #도메인 이름
 
        include /etc/nginx/snippets/letsencrypt.conf; #자주 쓰이는 함수 설정
 
        location / {
               return 301 https://$host$request_uri; # 80번으로 들어올 시 해당 uri로 이동
        }
}
server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server; #https 서버 설정
 
        server_name [domain].com;
 
        ssl_certificate /etc/letsencrypt/live/[도메인]/fullchain.pem; #ssl인증을 위한 용도
        ssl_certificate_key /etc/letsencrypt/live/[도메인]/privkey.pem; #privkey 설정
        ssl_trusted_certificate /etc/letsencrypt/live/[도메인]/fullchain.pem; #풀체인
        include /etc/nginx/snippets/ssl.conf; #보안 강화를 위한 옵션 추가
        #ssl_dhparam /etc/nginx/snippets/dhparam.pem; # 보안 강화를 위한 옵션 추가
 	#root /var/www/html;
 
	location /grafana/ {
		proxy_pass      	http://grafanas;
		proxy_redirect		off;
		proxy_set_header	Host $host;
		proxy_set_header	X-Real-IP $remote_addr;
		proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header	X-Forwarded-Host $server_name;
		proxy_set_header        X-Forwarded-Proto $scheme;
		#rewrite                ^/grafana/(.*)$  $1 break;
	}
	
	location /blog {
                proxy_pass              http://word; #wordpress 설정
                proxy_redirect          off; #서버 응답 헤더의 주소 변경
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for; #reverse proxy를 위한 용도
                proxy_set_header        X-Forwarded-Host $server_name;
                proxy_set_header        X-Forwarded-Proto $scheme; #해당 스키마를 통해 css 인식이 되어집니다.
        }
 
        location /util/ { #flask 설정
                rewrite			^/util(.*) $1 break;
		proxy_pass              http://utils;
                proxy_redirect          off;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Forwarded-Host $server_name;
        }
 
        location /nginx/ {
		rewrite			^/nginx(.*) $1 break;
                proxy_pass              http://web; #web 단을 위한 nginx 포워딩
                proxy_redirect          off;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        X-Forwarded-Host $server_name;
                proxy_set_header        X-Forwarded-Proto $scheme;
        }
 
}
# HTTPS www. server configuration
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2; #https www으로 들어올 시 동일하게 처리 후 해당 uri로 이동
        server_name www.[domain].com;
 
        ssl_certificate /etc/letsencrypt/live/[도메인]/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/[도메인]/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/[도메인]/fullchain.pem;
        include /etc/nginx/snippets/ssl.conf;
     
        location / {
            return 301 https://[domain].com$request_uri;
        }
}
# HTTP - CNAME Connect www.XXXX.com to XXXX.com
server {
        listen 80;
        listen [::]:80;
        server_name www.[domain].com;
 
        include /etc/nginx/snippets/letsencrypt.conf;
 
	location / {
            return 301 https://$host$request_uri;
        }
}
